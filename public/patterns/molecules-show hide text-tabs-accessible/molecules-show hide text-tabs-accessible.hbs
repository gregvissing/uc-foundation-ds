<style>

    .tabbed > ul > li > a {
        border-bottom: none !important;
        border: 1px solid var(--color-ltGray);
    }

    [role="tablist"] {
        padding: 0;
    }

    [role="tablist"] li,
    [role="tablist"] a {
        display: inline-block;
        list-style: none;
    }

    [role="tablist"] a {
        text-decoration: none;
        padding: 0.5rem 1em;
        border-top-left-radius: 15px;
        border-top-right-radius: 15px;
        background: #eee;
        color: var(--color-brand-black) !important;
        font-size: 1.3em !important;
        font-weight: 600 !important;
        cursor: pointer;
        transition: all .3s;
    }

    [role="tablist"] [aria-selected] {
        border: 1px solid;
        background: #fff;
        border-bottom: 0;
        position: relative;
        top: 1px;
    }

    [role="tabpanel"] {
        border: 1px solid;
        /* padding: 1.5rem; */
        border-bottom-left-radius: 15px;
        border-bottom-right-radius: 15px;
    }

    [role="tabpanel"] * + * {
        margin-top: 0.75rem;
    }

    *:focus {
        outline: none;
        box-shadow: inset 0 0 0 var(--outline-size) var(--outline-color);
    }

    @media (min-width: 900px) {
        [role="tablist"] {
            display: flex;
            align-items: stretch;
            justify-content: space-between;
            gap: 1px;
        }

        [role="tablist"] > li {
            flex-grow: 1;
            width: 25%;
        }

        [role="tablist"] > li > a {
            flex-grow: 1;
            width: 100%;
        }
    }

    @media (max-width: 550px) {
        [role="tablist"] li,
        [role="tablist"] a {
            display: block;
            position: static;
        }

        [role="tablist"] a {
            border: 1px solid #222 !important;
        }

        [role="tablist"] li + li a {
            border-top: 0 !important;
        }

        [role="tablist"] [aria-selected] {
            position: static;
        }

        [role="tablist"] [aria-selected]::after {
            content: "\0020⬅";
        }

        [role="tabpanel"] {
            border-top: 0;
        }

        [role="tablist"] a {
            border-radius: 0;
        }
    }

    .tabbed section:not([hidden]) .tab-content {
        opacity: 1;
        height: auto;
    }

    .tab-content.bg-img-content {
        padding-top: 6em !important;
        padding-bottom: 6em !important;
        background-repeat: no-repeat;
        background-size: cover !important;
        background-position: center;
        border-bottom-left-radius: 15px;
        border-bottom-right-radius: 15px;
    }

</style>

<div class="l-container py-2">
    <div class="tabbed">
        <ul>
            <li>
                <a href="#section1">Research</a>
            </li>
            <li>
                <a href="#section2">Care</a>
            </li>
            <li>
                <a href="#section3">Education</a>
            </li>
            <li>
                <a href="#section4">Greatest Needs</a>
            </li>
        </ul>
        <section id="section1">
            <div class="tab-content bg-img-content text flow p-4" style="background-image: url(https://foundation.uc.edu/image/Dr.-Jeff-Strawn--in-Department-of-Psych.jpg);">
                <div class="flex relative">
                    <div class="p-1 one-half relative">
                        <p class="large">Research</p>
                        <p>Fund our most critical research initiatives focused on precision medicine and brain health with a gift to the <a href="https://foundation.uc.edu/donate?id=da010d75-acd3-4a3c-ac24-48ac36772925" target="_blank" rel="noopener">Gardner Center UCGNI Programmatic Fund</a>.</p>
                    </div>
                </div>
            </div>
        </section>
        <section id="section2">
            <div class="tab-content bg-img-content text flow p-4" style="background-image: url(https://foundation.uc.edu/image/Care-Photo-2_1000.jpg); background-position-y: 0px;">
                <div class="flex relative">
                    <div class="p-1 one-half relative">
                        <p class="large">Care</p>
                        <p>When you support the <a href="https://foundation.uc.edu/donate?id=05efd8f0-0417-4d14-b664-557ed44bafba" target="_blank" rel="noopener">Neuroscience Institute Fund</a>, you help our clinical care teams find the right treatment for the right patient at the right time, improving lives.</p>
                    </div>
                </div>
            </div>
        </section>
        <section id="section3">
            <div class="tab-content bg-img-content text flow p-4" style="background-image: url(https://foundation.uc.edu/image/Education-Photo.jpg);">
                <div class="flex relative">
                    <div class="p-1 one-half relative">
                        <p class="large">Education</p>
                        <p>Support the next generation of neuroscience leaders. The <a href="https://foundation.uc.edu/donate?id=85b2b644-15fa-4407-b9ba-09bb466fa662" target="_blank" rel="noopener">Research and Education Discretionary Fund</a> helps recruitment, retention and training.</p>
                    </div>
                </div>
            </div>
        </section>
        <section id="section4">
            <div class="tab-content bg-img-content text flow p-4" style="background-image: url(https://foundation.uc.edu/image/UCGNI_cropped-hero_1000.jpg);">
                <div class="flex relative">
                    <div class="p-1 one-half relative">
                        <p class="large">Greatest Needs</p>
                        <p>From revolutionary technology to the recruitment of world-class faculty, supporting the <a href="https://foundation.uc.edu/donate?id=f62bf739-3349-4c1c-9634-ce6dde603fed" target="_blank" rel="noopener">Neuroscience Institute Discretionary Fund</a> allows our leaders to prioritize ongoing needs.</p>
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>

<script>

(function () {
    // Get relevant elements and collections
    const tabbed = document.querySelector(".tabbed");
    const tablist = tabbed.querySelector("ul");
    const tabs = tablist.querySelectorAll("a");
    const panels = tabbed.querySelectorAll('[id^="section"]');

    // The tab switching function
    const switchTab = (oldTab, newTab) => {
        newTab.focus();
        // Make the active tab focusable by the user (Tab key)
        newTab.removeAttribute("tabindex");
        // Set the selected state
        newTab.setAttribute("aria-selected", "true");
        oldTab.removeAttribute("aria-selected");
        oldTab.setAttribute("tabindex", "-1");
        // Get the indices of the new and old tabs to find the correct
        // tab panels to show and hide
        let index = Array.prototype.indexOf.call(tabs, newTab);
        let oldIndex = Array.prototype.indexOf.call(tabs, oldTab);
        panels[oldIndex].hidden = true;
        panels[index].hidden = false;
    };

    // Add the tablist role to the first <ul> in the .tabbed container
    tablist.setAttribute("role", "tablist");

    // Add semantics are remove user focusability for each tab
    Array.prototype.forEach.call(tabs, (tab, i) => {
        tab.setAttribute("role", "tab");
        tab.setAttribute("id", "tab" + (i + 1));
        tab.setAttribute("tabindex", "-1");
        tab.parentNode.setAttribute("role", "presentation");

        // Handle clicking of tabs for mouse users
        tab.addEventListener("click", (e) => {
            e.preventDefault();
            let currentTab = tablist.querySelector("[aria-selected]");
            if (e.currentTarget !== currentTab) {
                switchTab(currentTab, e.currentTarget);
            }
        });

        // Handle keydown events for keyboard users
        tab.addEventListener("keydown", (e) => {
            // Get the index of the current tab in the tabs node list
            let index = Array.prototype.indexOf.call(tabs, e.currentTarget);
            // Work out which key the user is pressing and
            // Calculate the new tab's index where appropriate
            let dir =
                e.which === 37
                    ? index - 1
                    : e.which === 39
                    ? index + 1
                    : e.which === 40
                    ? "down"
                    : null;
            if (dir !== null) {
                e.preventDefault();
                // If the down key is pressed, move focus to the open panel,
                // otherwise switch to the adjacent tab
                dir === "down"
                    ? panels[i].focus()
                    : tabs[dir]
                    ? switchTab(e.currentTarget, tabs[dir])
                    : void 0;
            }
        });
    });

    // Add tab panel semantics and hide them all
    Array.prototype.forEach.call(panels, (panel, i) => {
        panel.setAttribute("role", "tabpanel");
        panel.setAttribute("tabindex", "-1");
        let id = panel.getAttribute("id");
        panel.setAttribute("aria-labelledby", tabs[i].id);
        panel.hidden = true;
    });

    // Initially activate the first tab and reveal the first tab panel
    tabs[0].removeAttribute("tabindex");
    tabs[0].setAttribute("aria-selected", "true");
    panels[0].hidden = false;
})();

    
</script>